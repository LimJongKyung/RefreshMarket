<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.refresh.member.dao.MemberDAO">
    
    <!-- 회원가입 -->
    <insert id="insertMember" parameterType="member">
        INSERT INTO MEMBER (ID, PASSWD, NAME, REGISTRATIONNUMBER, ADDRESS, PHONENUMBER, EMAIL)
        VALUES (#{id}, #{passwd}, #{name}, #{registrationNumber}, #{address}, #{phoneNumber}, #{email})
    </insert>
    
    <!-- 아이디 중복 체크 -->
    <select id="checkIdDuplicate" parameterType="String" resultType="int">
        SELECT COUNT(*) 
        FROM Member 
        WHERE id = #{id}
    </select>
    
    <!-- 로그인 확인 -->
    <select id="checkLogin" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM Member
        WHERE id = #{id}
        AND passwd = #{passwd}
    </select>
    
    <!-- 회원 이름정보 표시를 위해 불러오기 -->
    <select id="getUserByName" parameterType="String" resultType="String">
        SELECT name
        FROM Member
        WHERE id = #{id, jdbcType=VARCHAR}
    </select>
    
    <!-- 분실시 이메일로 아이디 찾기 -->
    <select id="findIdByEmailAndName" parameterType="map" resultType="String">
	    SELECT id 
	    FROM Member
	    WHERE name = #{name} AND email = #{email} AND ROWNUM = 1
	</select>

	<select id="findPasswdByEmailAndName" parameterType="map" resultType="String">
	    SELECT passwd
	    FROM Member
	    WHERE name = #{name} AND email = #{email} AND ROWNUM = 1
	</select>
	
	<select id="findById" parameterType="member" resultType="member">
	    SELECT id,
           name,
           email,
           PHONENUMBER AS phoneNumber,
           address,
           grade,
           point
    	FROM member
    	WHERE id = #{id}
	</select>
	
	<!-- 회원 ID로 혜택 리스트 조회 -->
    <select id="getBenefitsByMemberId" resultType="com.refresh.member.vo.MemberBenefit">
        SELECT
            id,
            member_id,
            benefit_name,
            benefit_description
        FROM
            member_benefit
        WHERE
            member_id = #{memberId}
        ORDER BY
            id ASC
    </select>
    
    <delete id="deleteBenefits" parameterType="map">
	  DELETE FROM member_benefit
	  WHERE member_id = #{memberId, jdbcType=VARCHAR}
	    AND benefit_description IN
	    <foreach item="desc" collection="benefitDescriptions" open="(" separator="," close=")">
	      #{desc, jdbcType=VARCHAR}
	    </foreach>
	</delete>

	<update id="subtractPoint">
	  UPDATE member
	  SET point = point - #{usedPoint}
	  WHERE id = #{id}
	</update>
</mapper>
